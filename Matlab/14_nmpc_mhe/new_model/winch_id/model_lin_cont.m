function [xdot] = model_lin_cont(x, u)
%------------------Albert-Ludwigs-Universitaet Freiburg--------------------
%___________________M. Sc. in Microsystems Engineering_____________________
%Thesis: 
%Period of preparation: April-September 2015
%Author: Ernesto Denicia
%Script: Model of the carousel used for simulation and lineal control (New
%control definition with motor acceleration instead of velocity).
%Description: This model already includes the estimated parameters.
%Comments: Have consideration on the simplifications done for arriving to
%this formulation.
%State vector x:
%ddelta_arm                  %rad/s
%alpha                       %rad
%beta                        %rad
%dddelta_arm                 %rad/s^2
%dalpha                      %rad/s
%dbeta                       %rad/s
%ddelta_motor_sp             %rad/s
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
%% State vector definition

ddelta_arm = x(1);
alpha = x(2);
beta = x(3);
dddelta_arm = x(4);
dalpha = x(5);
dbeta = x(6);
l_t = x(7);

%2. Control signal: Motor speed set point
ddelta_motor_sp = u(1);
dl_t = u(2);
%% 3. Constants used in this model
m_ball = 0.57;              %kg
I_LAS=0.03203;              %kg*m^2
r_A = 2.05;                 %m
g = 9.81;                   %kg*m/s^2

%% 4. Optimized parameters for the given constants
wn = 6.2409;                  %rad/s  
d = 0.1288;                   %[.]
mu_alpha = 0.4876;          %N*m*s/rad
mu_beta = 2.1774;           %N*m*s/rad
mu_air = 0.0074;              %kg/m
i_t = 0.3463;                 %kg*m^2

%% 5. Explicit Model
xdot = [
% Generalized coordinates
dddelta_arm;
dalpha;
dbeta; 
%Second order system
wn*wn*ddelta_motor_sp-2*d*wn*dddelta_arm-wn*wn*ddelta_arm; 
%Simplified variants of ddalpha_s
-(dalpha*mu_alpha + g*l_t*m_ball*cos(alpha) + (dbeta^2*i_t*l_t^2*...
sin(2*alpha))/2 + (dbeta^2*l_t^2*m_ball*sin(2*alpha))/2 + (ddelta_arm^2*...
l_t^2*m_ball*sin(2*alpha))/2 + dalpha*l_t^2*mu_air*(dalpha^2*l_t^2 + ...
ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*...
cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm^2*...
l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*...
cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2) + ...
dbeta*ddelta_arm*l_t^2*m_ball*sin(2*alpha) + ddelta_arm^2*l_t*m_ball*...
r_A*cos(beta)*sin(alpha) - dddelta_arm*l_t*m_ball*r_A*sin(alpha)*...
sin(beta) - ddelta_arm*l_t*mu_air*r_A*sin(alpha)*sin(beta)*(dalpha^2*...
l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*...
l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*...
ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*...
r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*...
sin(beta))^(1/2))/(l_t^2*(i_t + m_ball));

%Simplified variants of ddbeta_s
-(dbeta*mu_beta + dddelta_arm*l_t^2*m_ball*cos(alpha)^2 - dalpha*dbeta*...
i_t*l_t^2*sin(2*alpha) - dalpha*dbeta*l_t^2*m_ball*sin(2*alpha) - ...
dalpha*ddelta_arm*l_t^2*m_ball*sin(2*alpha) + dbeta*l_t^2*mu_air*...
cos(alpha)^2*(dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*...
cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*...
l_t^2*cos(alpha)^2 + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*...
dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*...
r_A*sin(alpha)*sin(beta))^(1/2) + ddelta_arm*l_t^2*mu_air*cos(alpha)^2*...
(dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ...
ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*...
cos(alpha)^2 + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*...
ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*...
sin(alpha)*sin(beta))^(1/2) + ddelta_arm^2*l_t*m_ball*r_A*cos(alpha)*...
sin(beta) + dddelta_arm*l_t*m_ball*r_A*cos(alpha)*cos(beta) + ...
ddelta_arm*l_t*mu_air*r_A*cos(alpha)*cos(beta)*(dalpha^2*l_t^2 + ...
ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*...
cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm^2*...
l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*...
cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2))/...
(I_LAS + i_t*l_t^2*cos(alpha)^2 + l_t^2*m_ball*cos(alpha)^2);
%Model with tether length velocity
 %-(dalpha*mu_alpha + 2*dalpha*dl_t*l_t*m_ball + g*l_t*m_ball*cos(alpha) + (dbeta^2*i_t*l_t^2*sin(2*alpha))/2 + (dbeta^2*l_t^2*m_ball*sin(2*alpha))/2 + (ddelta_arm^2*l_t^2*m_ball*sin(2*alpha))/2 + dalpha*l_t^2*mu_air*(dl_t^2 + dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm*dl_t*r_A*cos(alpha)*sin(beta) + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2) + 2*dalpha*dl_t*i_t*l_t + dbeta*ddelta_arm*l_t^2*m_ball*sin(2*alpha) + ddelta_arm^2*l_t*m_ball*r_A*cos(beta)*sin(alpha) - dddelta_arm*l_t*m_ball*r_A*sin(alpha)*sin(beta) - ddelta_arm*l_t*mu_air*r_A*sin(alpha)*sin(beta)*(dl_t^2 + dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm*dl_t*r_A*cos(alpha)*sin(beta) + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2))/(l_t^2*(i_t + m_ball));
 %-(dbeta*mu_beta + dddelta_arm*l_t^2*m_ball*cos(alpha)^2 + 2*dbeta*dl_t*i_t*l_t*cos(alpha)^2 + 2*dbeta*dl_t*l_t*m_ball*cos(alpha)^2 + 2*ddelta_arm*dl_t*l_t*m_ball*cos(alpha)^2 - dalpha*dbeta*i_t*l_t^2*sin(2*alpha) - dalpha*dbeta*l_t^2*m_ball*sin(2*alpha) - dalpha*ddelta_arm*l_t^2*m_ball*sin(2*alpha) + dbeta*l_t^2*mu_air*cos(alpha)^2*(dl_t^2 + dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm*dl_t*r_A*cos(alpha)*sin(beta) + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2) + ddelta_arm*l_t^2*mu_air*cos(alpha)^2*(dl_t^2 + dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm*dl_t*r_A*cos(alpha)*sin(beta) + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2) + ddelta_arm^2*l_t*m_ball*r_A*cos(alpha)*sin(beta) + dddelta_arm*l_t*m_ball*r_A*cos(alpha)*cos(beta) + ddelta_arm*l_t*mu_air*r_A*cos(alpha)*cos(beta)*(dl_t^2 + dalpha^2*l_t^2 + ddelta_arm^2*r_A^2 + dbeta^2*l_t^2*cos(alpha)^2 + ddelta_arm^2*l_t^2*cos(alpha)^2 + 2*dbeta*ddelta_arm*l_t^2*cos(alpha)^2 + 2*ddelta_arm*dl_t*r_A*cos(alpha)*sin(beta) + 2*ddelta_arm^2*l_t*r_A*cos(alpha)*cos(beta) + 2*dbeta*ddelta_arm*l_t*r_A*cos(alpha)*cos(beta) - 2*dalpha*ddelta_arm*l_t*r_A*sin(alpha)*sin(beta))^(1/2))/(I_LAS + i_t*l_t^2*cos(alpha)^2 + l_t^2*m_ball*cos(alpha)^2);
-dl_t];
end